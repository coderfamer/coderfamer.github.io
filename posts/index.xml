<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://coderfamer.github.io/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Dec 2022 00:20:59 +0800</lastBuildDate><atom:link href="https://coderfamer.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo</title>
      <link>https://coderfamer.github.io/posts/hugo/</link>
      <pubDate>Fri, 02 Dec 2022 00:20:59 +0800</pubDate>
      
      <guid>https://coderfamer.github.io/posts/hugo/</guid>
      <description>hugo 安装和使用 hugo 安装 建立站点 hugo new site hugo_blog 添加主题 cd hugo_blog git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 配置文件中使用指定主题
echo &amp;#39;theme = &amp;#34;ananke&amp;#34;&amp;#39; &amp;gt;&amp;gt;config.toml 创建新文章 hugo new posts/my-first-post.md --- title: &amp;#34;My First Post&amp;#34; date: 2022-12-02T00:00:08+08:00 draft: false --- ## first post 开启本地服务 hugo server --bind=0.0.0.0 --baseURL=http://&amp;lt;yourhost&amp;gt;:1313 在 github 部署个人博客 使用 github 的 user pagers 功能创建
coderfamer.github.io
rm -rf public git submodule add -b master git@github.com:&amp;lt;yourgitname&amp;gt;/&amp;lt;yourgitname&amp;gt;.github.io.git public 在根目录的 config.toml 添加 baseURL</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://coderfamer.github.io/posts/my-first-post/</link>
      <pubDate>Fri, 02 Dec 2022 00:00:08 +0800</pubDate>
      
      <guid>https://coderfamer.github.io/posts/my-first-post/</guid>
      <description>first post </description>
    </item>
    
    <item>
      <title>centos7 离线安装 kubernets (k8s)</title>
      <link>https://coderfamer.github.io/posts/software/kubernetes/00_k8s-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 23 Apr 2022 15:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/kubernetes/00_k8s-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</guid>
      <description>centos 7 离线安装 kubernets (k8s) 下载离线安装包 准备一个可以连接外网的 centos7 机器，机器做好快照。
准备 安装必要程序
yum install yum-utils 生成docker 安装包 因需要 docker 程序拉取 k8s 的相关镜像，测试机需要安装 docker
更新 docker 源 yum install -y epel-release.noarch yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo 导出并安装 导出 docker 安装包和其依赖包
mkdir docker &amp;amp;&amp;amp; cd docker yumdownloader --resolve docker ce 安装并启动 docker
yum install -y docker-ce systemctl start docker systemctl enable docker &amp;amp;&amp;amp; systemctl start docker k8s 包及相关镜像 k8s 安装包 导出 配置修改 yum 源 vim /etc/yum.repos.d/kubernets.repo</description>
    </item>
    
    <item>
      <title>centos7 离线安装 kubernets (k8s)</title>
      <link>https://coderfamer.github.io/posts/software/kubernetes/01_k8s%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90token/</link>
      <pubDate>Sat, 23 Apr 2022 15:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/kubernetes/01_k8s%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90token/</guid>
      <description>k8s 重新生成 token k8s 安装之后会自动生成一个有效期为 24h 的 token，超时之后就需要重新生成新的 token
方法 生成 token
kubeadm token create 获取ca证书 hash 值
openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&amp;gt;/dev/null | openssl dgst -sha256 -hex | sed &amp;#39;s/^.* //&amp;#39; ** 查看 token **
kubeadm token list 上述步骤完成之后就可以添加新的 node 节点到 master 了
kubeadm join &amp;lt;master_ip&amp;gt;:6443 --token &amp;lt;TOKEN&amp;gt; --discovery-token-ca-cert-hash share256:&amp;lt;HASH&amp;gt; </description>
    </item>
    
    <item>
      <title>windows 清除 samba 登录状态</title>
      <link>https://coderfamer.github.io/posts/software/samba/windows-samba-%E6%B8%85%E9%99%A4%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81/</link>
      <pubDate>Mon, 14 Mar 2022 15:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/samba/windows-samba-%E6%B8%85%E9%99%A4%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81/</guid>
      <description>windows 清除 samba 登录状态 简介 windows 登录 samba 共享目录之后，会保存当前用户的缓存，每次访问之后就无需再次输入账户密码，想要使用其他账户就需要把当前账户状态清理掉
操作 方法一 重启电脑，如果保存用户名密码重启电脑不会清理账户状态
方法二 命令行清理
打开 cmd 命令行窗口
查看所有连接
net use 清除某个连接
net use &amp;lt;remote-name&amp;gt; /del 清除所有连接
net use * /del </description>
    </item>
    
    <item>
      <title>git 基于某个分支重新构建项目</title>
      <link>https://coderfamer.github.io/posts/software/git/git%E5%9F%BA%E4%BA%8E%E5%88%86%E6%94%AF%E9%87%8D%E5%BB%BA%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Tue, 08 Mar 2022 15:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/git/git%E5%9F%BA%E4%BA%8E%E5%88%86%E6%94%AF%E9%87%8D%E5%BB%BA%E9%A1%B9%E7%9B%AE/</guid>
      <description>git 基于某个分支重建项目 简介 项目中因为不同需求构建多分支，其中某个分支改动量较大，想要独立成一个业务项目，本文记录了相关操作
过程 重建 在项目目录中检出分支
git checkout &amp;lt;branch_name&amp;gt; 拷贝项目到一个新的目录，并切换目录
cp project new_project -r &amp;amp;&amp;amp; cd new_project 替换当前分支为主分支
git branch -D master git branch -m master 建立远程仓库（根据项目仓库所在位置，自行创建）
修改仓库地址并提交内容
git remote set-url origin &amp;lt;new-remote-url&amp;gt; git push origin master 清理分支 如果旧项目中有很多分支和远程分支，在新项目中会显的杂乱，可以利用 git 命令清理一些无效分支，即不想保存在 remote 的分支
查看无效分支
git remote prune origin --dry-run 清理无效分支
git remote prune origin 如果本地还有一些已检出的分支需要清理，需要手动在本地清理
git branch -d &amp;lt;branch1 branch2 ...&amp;gt; </description>
    </item>
    
    <item>
      <title>cmake external 外部项目设置 runtime 路径</title>
      <link>https://coderfamer.github.io/posts/software/spdlog/external_runtime/</link>
      <pubDate>Sun, 06 Mar 2022 23:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/spdlog/external_runtime/</guid>
      <description>cmake external 外部项目超级构建设置 runtime 路径 简介 在使用 cmake 超级构建的时候，想要指定二进制文件的输出路径。
ExternalProject_Add 参数中有一个 BINARY_DIR 选项可以指定输出路径，在构建的过程中，发现这个参数输出路径不仅会包含编译的二进制文件，还会把 cmake 自身产生的一些二进制文件同时包含进去。
后参阅 cmake 文档，发现 ExternalProject_Add 中的 CMAKE_ARGS 选项和 set_target_properties 搭配可仅仅指定编译的二进制文件输出到指定路径
配置 目录结构 代码 顶层 CMakeLists.txt 内容
cmake_minimum_required(VERSION 3.5) project(demo LANGUAGES CXX) set_property(DIRECTORY PROPERTY EP_BASE ${CMAKE_BINARY_DIR}/subprojects) set(STAGED_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/stage) include(ExternalProject) ExternalProject_Add( log SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src CMAKE_ARGS -DRUNTIME_OUTPUT_DIRECTORY=${PROJECT_SOURCE_DIR}/run BUILD_ALWAYS 1 INSTALL_COMMAND &amp;#34;&amp;#34; ) CMAKE_ARGS 添加 runtime 参数 src 目录中 CMakeLists.txt 内容
cmake_minimum_required(VERSION 3.5) project(demo_core LANGUAGES CXX) add_executable(core main.cpp) message(&amp;#34;=========================${RUNTIME_OUTPUT_DIRECTORY}&amp;#34;) set_target_properties(core PROPERTIES RUNTIME_OUTPUT_DIRECTORY &amp;#34;${RUNTIME_OUTPUT_DIRECTORY}&amp;#34; ) main.</description>
    </item>
    
    <item>
      <title>常用软件清单</title>
      <link>https://coderfamer.github.io/posts/software/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Tue, 02 Nov 2021 20:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</guid>
      <description>文件浏览器 xyplorer directory opus total comman</description>
    </item>
    
    <item>
      <title>git describe 命令详解</title>
      <link>https://coderfamer.github.io/posts/software/git/git_describe/</link>
      <pubDate>Sun, 29 Aug 2021 15:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/git/git_describe/</guid>
      <description>git describe 命令详解 git 获取最新的 tag 查找最近的tag
git describe # 不需要后缀 git describe --abbrev=0 获取当前分支的tag
git describe --abbrev=0 --tags 获取所有分支的tag
git describe --tags `git rev-list --tags --max-count=1` </description>
    </item>
    
    <item>
      <title>centos 7 配置 samba client</title>
      <link>https://coderfamer.github.io/posts/software/samba/centos7%E9%85%8D%E7%BD%AEsambaclient/</link>
      <pubDate>Thu, 26 Aug 2021 16:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/samba/centos7%E9%85%8D%E7%BD%AEsambaclient/</guid>
      <description>Samba - 如何配置 samba 客户端 SMB（Server Message Block）又称 CIFS(Common Internet File System),一种应用层网络传输协议。 本文介绍 centos 7 如何访问 smb 服务器的共享目录
安装 samba 软件 yum -y install samba samba-client cifs-utils 注意: 推荐安装 samba 软件
创建挂载目录
mkdir -p /mnt/projects 确认是否能够连接到服务器，以及可以访问的共享目录
# sambalicent -L //samba-server -U samba-username smbclient -L //samba-server -U samba Enter SAMBA\samba_user1&amp;#39;s password: Domain=[LOCALHOST] OS=[Windows 6.1] Server=[Samba 4.6.2] Sharename Type Comment --------- ---- ------- homes Disk Home Directories print$ Disk Printer Drivers shared Disk Shared Directories projects Disk Shared Directories IPC$ IPC IPC Service (Samba server samba-storage) samba Disk Home Directories Domain=[LOCALHOST] OS=[Windows 6.</description>
    </item>
    
    <item>
      <title>git stash 命令 储藏修改</title>
      <link>https://coderfamer.github.io/posts/software/git/git_stash_usage/</link>
      <pubDate>Tue, 18 May 2021 03:41:23 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/git/git_stash_usage/</guid>
      <description>git stash 命令 储藏修改 问题 在新增业务的过程中，需要修复一个紧急bug，但是当前分支已经修改了很多内容，想要切换分支，但是不想提交当前的内容。
解决办法 可以把当前的修改内容储藏起来，并将储藏内容推送到栈上
用法 保存 git stash [save message] save为可选项，可对当前的储藏添加备注信息。
取出 git stash pop	# 恢复最近一次的储藏内容，恢复一次即删除 git stash pop stash@{num}	# 恢复指定序号的储藏内容 git stash apply	# 同上，不过可恢复多次 git stash apply stash@{num}	# 同上 其它 git stash list git stash drop git stash clear </description>
    </item>
    
    <item>
      <title>wireguard 配置</title>
      <link>https://coderfamer.github.io/posts/software/wireguard/command/</link>
      <pubDate>Thu, 06 May 2021 20:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/wireguard/command/</guid>
      <description></description>
    </item>
    
    <item>
      <title>xyplorer 访问 samba 时候拒绝访问</title>
      <link>https://coderfamer.github.io/posts/software/samba/xyplorer%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AEsamba/</link>
      <pubDate>Thu, 06 May 2021 20:07:32 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/samba/xyplorer%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AEsamba/</guid>
      <description>xyplorer 访问 samba 时候拒绝访问 问题 Ubuntu 配置好 samba 之后，自带文件管理器可以访问 samba 共享目录，但是用 xyplorer 访问时候， xyplorer 提示拒绝访问
原因 本地文件管理器在访问 samba 共享目录时候会提示输入账户名密码，而 xyplorer 不会与自带文件管理器同步密码，所以导致拒绝访问
解决办法 只需要在 xyplorer 中做个网络映射即可
操作步骤 Tools -&amp;gt; 特殊工具 -&amp;gt; 映射网络驱动器 任选一个盘符之后，输入 samba 创建的账户名即可</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coderfamer.github.io/posts/software/spdlog/%E5%BC%95%E7%94%A8%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coderfamer.github.io/posts/software/spdlog/%E5%BC%95%E7%94%A8%E6%96%B9%E5%BC%8F/</guid>
      <description>1 直接头文件引用
2 静态库引用
3 系统安装引用 find_package
优劣势
find_package编译速度最快，静态库引用和头文件都比较慢，目前不清楚原因
安装教程
9. CMake - Spdlog v1.x - DocsForge</description>
    </item>
    
  </channel>
</rss>
